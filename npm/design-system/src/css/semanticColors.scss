@use 'baseColors' as *;
@use 'func';

/**
* Extracts RGB color channels from a named color definition
*/
@function extract-rgb($color-name: string) {
  $color: map-get($colors, $color-name);

  @if $color {
    @return red($color), green($color), blue($color);
  }

  @return null;
}

// Provides raw black as a RGB number tuple for substitution into alpha modifying situations (shadows)
$black-rgb-color: var(--black-rgb-color);

$control-border-color: $metal-30;
$control-focus-color: $chill-40;

$button-blue-color: $chill-50;
$button-blue-hover-color: $chill-60;
$button-blue-push-color: $chill-70;

$button-white-color: $metal-00;
$button-white-hover-color: $metal-05;
$button-white-push-color: $metal-10;

$control-text-color-white: $metal-05;
$control-text-color-black: $metal-90;

// Write semantic CSS color variables to root
// **NOTE**: Most variables do not need to be exposed as a CSS variable
:root {
  --black-rgb-color: #{extract-rgb('metal-100')};
}