exports['js rewriter .rewriteJs source maps emits sourceInfo as expected 1'] = {
  "url": "http://example.com/foo.js",
  "js": "window.top"
}

exports['js rewriter .rewriteJs source maps emits info about existing inline sourcemap 1'] = {
  "url": "http://example.com/foo.js",
  "js": "// Generated by CoffeeScript 2.2.1\n(function() {\n  // just an example of transpilation w/ sourcemap -\n  // `test.coffee` is not directly transpiled/executed by any test code\n  // regenerate JS + sourcemap with `coffee -c -m test.coffee`\n  setTimeout(function() {\n    window;\n    var foo;\n    return foo = `${window.top.foo}`;\n  }, 1000);\n\n}).call(this);\n\n//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAiZmlsZSI6ICJ0ZXN0LmpzIiwKICAic291cmNlUm9vdCI6ICIiLAogICJzb3VyY2VzIjogWwogICAgInRlc3QuY29mZmVlIgogIF0sCiAgIm5hbWVzIjogW10sCiAgIm1hcHBpbmdzIjogIjtBQUFBO0VBQUE7OztFQUlBLFVBQUEsQ0FBVyxRQUFBLENBQUEsQ0FBQTtJQUNUO0FBQUEsUUFBQTtXQUNBLEdBQUEsR0FBTSxDQUFBLENBQUEsQ0FBRyxNQUFNLENBQUMsR0FBRyxDQUFDLEdBQWQsQ0FBQTtFQUZHLENBQVgsRUFHRSxJQUhGO0FBSkEiLAogICJzb3VyY2VzQ29udGVudCI6IFsKICAgICIjIGp1c3QgYW4gZXhhbXBsZSBvZiB0cmFuc3BpbGF0aW9uIHcvIHNvdXJjZW1hcCAtXG4jIGB0ZXN0LmNvZmZlZWAgaXMgbm90IGRpcmVjdGx5IHRyYW5zcGlsZWQvZXhlY3V0ZWQgYnkgYW55IHRlc3QgY29kZVxuIyByZWdlbmVyYXRlIEpTICsgc291cmNlbWFwIHdpdGggYGNvZmZlZSAtYyAtbSB0ZXN0LmNvZmZlZWBcblxuc2V0VGltZW91dCAtPlxuICB3aW5kb3dcbiAgZm9vID0gXCIje3dpbmRvdy50b3AuZm9vfVwiXG4sIDEwMDBcbiIKICBdCn0="
}

exports['js rewriter .rewriteJs source maps emits info about existing external sourcemap 1'] = {
  "url": "http://example.com/foo.js",
  "js": "// Generated by CoffeeScript 2.2.1\n(function() {\n  // just an example of transpilation w/ sourcemap -\n  // `test.coffee` is not directly transpiled/executed by any test code\n  // regenerate JS + sourcemap with `coffee -c -m test.coffee`\n  setTimeout(function() {\n    window;\n    var foo;\n    return foo = `${window.top.foo}`;\n  }, 1000);\n\n}).call(this);\n\n//# sourceMappingURL=test.js.map\n"
}

exports['js rewriter .rewriteJs transformations throws an error via the driver if AST visiting throws an error 1'] = `
window.top.Cypress.utils.throwErrByPath('proxy.js_rewriting_failed', { args: {"errMessage":"foo","errStack":"stack","url":"http://example.com/foo.js"} })
`
