/* eslint-disable */
// This file is generated by scripts/generate-config-object.js
// To generate this file, you need to download cypress-documentation project next to your cypress project.
// Then, type in node ./scripts/generate-config-object.js from cypress root dir. 
//
// If your cypress-documentation project is not next to cypress project, 
// specify the path to the project as the first argument. 

export const optionInfo = [
  {
    "name": "Global",
    "options": [
      {
        "name": "baseUrl",
        "default": "null",
        "type": "string",
        "description": "URL used as prefix for `cy.visit()` or `cy.request()` command's URL"
      },
      {
        "name": "env",
        "default": "{}",
        "type": "object",
        "description": "Any values to be set as 'environment variables'"
      },
      {
        "name": "numTestsKeptInMemory",
        "default": "50",
        "type": "number",
        "description": "The number of tests for which snapshots and command data are kept in memory. Reduce this number if you are experiencing high memory consumption in your browser during a test run."
      },
      {
        "name": "port",
        "default": "null",
        "type": "string",
        "description": "Port used to host Cypress. Normally this is a randomly generated port"
      },
      {
        "name": "reporter",
        "default": "spec",
        "type": "string",
        "description": "The 'reporter' used during `cypress run`"
      },
      {
        "name": "reporterOptions",
        "default": "null",
        "type": "string",
        "description": "The 'reporter options' used. Supported options depend on the reporter."
      },
      {
        "name": "watchForFileChanges",
        "default": "true",
        "type": "string",
        "description": "Whether Cypress will watch and restart tests on test file changes"
      }
    ]
  },
  {
    "name": "Timeouts",
    "options": [
      {
        "name": "defaultCommandTimeout",
        "default": "4000",
        "type": "number",
        "description": "Time, in milliseconds, to wait until most DOM based commands are considered timed out"
      },
      {
        "name": "execTimeout",
        "default": "60000",
        "type": "number",
        "description": "Time, in milliseconds, to wait for a system command to finish executing during a `cy.exec()` command"
      },
      {
        "name": "taskTimeout",
        "default": "60000",
        "type": "number",
        "description": "Time, in milliseconds, to wait for a task to finish executing during a `cy.task()` command"
      },
      {
        "name": "pageLoadTimeout",
        "default": "60000",
        "type": "number",
        "description": "Time, in milliseconds, to wait for `page transition events` or `cy.visit()`, `cy.go()`, `cy.reload()` commands to fire their page `load` events. Network requests are limited by the underlying operating system, and may still time out if this value is increased."
      },
      {
        "name": "requestTimeout",
        "default": "5000",
        "type": "number",
        "description": "Time, in milliseconds, to wait for an XHR request to go out in a `cy.wait()` command"
      },
      {
        "name": "responseTimeout",
        "default": "30000",
        "type": "number",
        "description": "Time, in milliseconds, to wait until a response in a `cy.request()`, `cy.wait()`, `cy.fixture()`, `cy.getCookie()`, `cy.getCookies()`, `cy.setCookie()`, `cy.clearCookie()`, `cy.clearCookies()`, and `cy.screenshot()` commands"
      }
    ]
  },
  {
    "name": "Folders / Files",
    "options": [
      {
        "name": "fileServerFolder",
        "default": "root project folder",
        "type": "string",
        "description": "Path to folder where application files will attempt to be served from"
      },
      {
        "name": "fixturesFolder",
        "default": "cypress/fixtures",
        "type": "string",
        "description": "Path to folder containing fixture files (Pass `false` to disable)"
      },
      {
        "name": "ignoreTestFiles",
        "default": "*.hot-update.js",
        "type": "string",
        "description": "A String or Array of glob patterns used to ignore test files that would otherwise be shown in your list of tests. Cypress uses `minimatch` with the options: `{dot: true, matchBase: true}`. We suggest using \"http://globtester.com\" to test what files would match."
      },
      {
        "name": "integrationFolder",
        "default": "cypress/integration",
        "type": "string",
        "description": "Path to folder containing integration test files"
      },
      {
        "name": "pluginsFile",
        "default": "cypress/plugins/index.js",
        "type": "string",
        "description": "Path to plugins file. (Pass `false` to disable)"
      },
      {
        "name": "screenshotsFolder",
        "default": "cypress/screenshots",
        "type": "string",
        "description": "Path to folder where screenshots will be saved from `cy.screenshot()` command or after a test fails during `cypress run`"
      },
      {
        "name": "supportFile",
        "default": "cypress/support/index.js",
        "type": "string",
        "description": "Path to file to load before test files load. This file is compiled and bundled. (Pass `false` to disable)"
      },
      {
        "name": "testFiles",
        "default": "**/*.*",
        "type": "string",
        "description": "A String or Array of glob patterns of the test files to load"
      },
      {
        "name": "videosFolder",
        "default": "cypress/videos",
        "type": "string",
        "description": "Path to folder where videos will be saved during `cypress run`"
      }
    ]
  },
  {
    "name": "Screenshots",
    "options": [
      {
        "name": "screenshotsFolder",
        "default": "cypress/screenshots",
        "type": "string",
        "description": "Path to folder where screenshots will be saved from `cy.screenshot()` command or after a test fails during `cypress run`"
      },
      {
        "name": "trashAssetsBeforeRuns",
        "default": "true",
        "type": "string",
        "description": "Whether Cypress will trash assets within the `screenshotsFolder` and `videosFolder` before tests run with `cypress run`."
      }
    ]
  },
  {
    "name": "Videos",
    "options": [
      {
        "name": "trashAssetsBeforeRuns",
        "default": "true",
        "type": "string",
        "description": "Whether Cypress will trash assets within the `screenshotsFolder` and `videosFolder` before tests run with `cypress run`."
      },
      {
        "name": "videoCompression",
        "default": "32",
        "type": "number",
        "description": "The quality setting for the video compression, in Constant Rate Factor (CRF). The value can be `false` to disable compression or a value between `0` and `51`, where a lower value results in better quality (at the expense of a higher file size)."
      },
      {
        "name": "videosFolder",
        "default": "cypress/videos",
        "type": "string",
        "description": "Where Cypress will automatically save the video of the test run when tests run with `cypress run`."
      },
      {
        "name": "video",
        "default": "true",
        "type": "string",
        "description": "Whether Cypress will capture a video of the tests run with `cypress run`."
      },
      {
        "name": "videoUploadOnPasses",
        "default": "true",
        "type": "string",
        "description": "Whether Cypress will process, compress, and upload videos to the \"Dashboard\" even when all tests in a spec file are passing. This only applies when recording your runs to the Dashboard. Turn this off if you'd like to only upload the spec file's video when there are failing tests."
      }
    ]
  },
  {
    "name": "Browser",
    "options": [
      {
        "name": "chromeWebSecurity",
        "default": "true",
        "type": "string",
        "description": "Whether Chrome Web Security for `same-origin policy` and `insecure mixed content` is enabled. 'Read more about this here'"
      },
      {
        "name": "userAgent",
        "default": "null",
        "type": "string",
        "description": "Enables you to override the default user agent the browser sends in all request headers. User agent values are typically used by servers to help identify the operating system, browser, and browser version. See \"User-Agent MDN Documentation\" for example user agent values."
      },
      {
        "name": "blacklistHosts",
        "default": "null",
        "type": "string",
        "description": "A String or Array of hosts that you wish to block traffic for. 'Please read the notes for examples on using this.'"
      },
      {
        "name": "modifyObstructiveCode",
        "default": "true",
        "type": "string",
        "description": "Whether Cypress will search for and replace obstructive JS code in `.js` or `.html` files. 'Please read the notes for more information on this setting.'"
      }
    ]
  },
  {
    "name": "Viewport",
    "options": [
      {
        "name": "viewportHeight",
        "default": "660",
        "type": "number",
        "description": "Default height in pixels for the application under tests' viewport (Override with `cy.viewport()` command)"
      },
      {
        "name": "viewportWidth",
        "default": "1000",
        "type": "number",
        "description": "Default width in pixels for the application under tests' viewport. (Override with `cy.viewport()` command)"
      }
    ]
  },
  {
    "name": "Animations",
    "options": [
      {
        "name": "animationDistanceThreshold",
        "default": "5",
        "type": "number",
        "description": "The distance in pixels an element must exceed over time to be considered animating"
      },
      {
        "name": "waitForAnimations",
        "default": "true",
        "type": "string",
        "description": "Whether to wait for elements to finish animating before executing commands"
      }
    ]
  },
  {
    "name": "Node version",
    "options": [
      {
        "name": "nodeVersion",
        "default": "bundled",
        "type": "string",
        "description": "If set to `system`, Cypress will try to find a Node executable on your path to use when executing your plugins. Otherwise, Cypress will use the Node version bundled with Cypress."
      }
    ]
  }
]